@model EditForumTopicModel
@using Nop.Core.Domain.Forums;
@using Nop.Web.Extensions;
@using Nop.Web.Models.Boards;

@Html.Action("ForumBreadcrumb", new { forumId = Model.ForumId, forumTopicId = Model.Id })


<div class="features_items"><!--features_items-->
    <h2 class="title text-center">@if (Model.IsEdit)
            {
                @T("Forum.EditTopic")
            }
            else
            {
                @T("Forum.NewTopic")
            }</h2>
    <div class="custom-page-box-div">
        @using (Html.BeginForm())
            {
                <div class="message-error">
                    @Html.ValidationSummary(true)
                </div>
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.ForumId)
            
                <div class="form-fields">
                    <div class="form-group row">
                        <div class="col-md-2">
                            <label>@T("Forum.ForumName"):</label>
                        </div>
                        <div class="col-md-6">
                            <strong>@Model.ForumName</strong>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2">
                           <label>@T("Forum.TopicTitle"):</label>
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.Subject, new { @class = "forum-topic-title-text gray-input" })
                        </div>
                        <div class="col-md-4">
                            @Html.ValidationMessageFor(model => model.Subject)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-offset-2 col-md-6">
                            @if (Model.ForumEditor == EditorType.BBCodeEditor)
                            {
                                @Html.BBCodeEditor("Text")
                            }
                            @Html.TextAreaFor(model => model.Text, new { @class = "forum-post-text gray-textarea", TextMode = "MultiLine",rows="10" })
                        </div>
                        <div class="col-md-4">
                            @Html.ValidationMessageFor(model => model.Text)
                        </div>
                    </div>


                    @if (Model.IsCustomerAllowedToSetTopicPriority)
                    {
                        <div class="form-group row">
                            <div class="col-md-2">
                                <label>@T("Forum.Priority"):</label>
                            </div>
                            <div class="col-md-6">
                                @Html.DropDownList("TopicTypeId", new SelectList(Model.TopicPriorities, "Value", "Text", Model.TopicTypeId), new { @class = "gray-dropdown" })
                            </div>
                        </div>
                    }
                    @if (Model.IsCustomerAllowedToSubscribe)
                    {
                        <div class="form-group row">
                            <div class="col-md-2">
                                <label>@T("Forum.Options"):</label>
                            </div>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Subscribed)
                                <span>@T("Forum.NotifyWhenSomeonePostsInThisTopic")</span>
                            </div>
                        </div>
                    }
                </div>
                <div class="buttons">
                    <input type="submit" value="@T("Forum.Submit")" class="btn btn-primary" />
                    <input type="button" class="btn btn-primary" value="@T("Forum.Cancel")" onclick="setLocation('@Url.RouteUrl("ForumSlug", new { id = Model.ForumId, slug = Model.ForumSeName })')" />
                </div>
            }
    </div>
</div>


