@model CheckoutBillingAddressModel
@using Nop.Web.Models.Checkout;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
}
@Html.Action("CheckoutProgress", "Checkout", new { step = CheckoutProgressStep.Address })



<div class="container">
    
    <div class="features_items my-account-page"><!--features_items-->
        <h2 class="title text-center">@T("Checkout.BillingAddress")</h2>
        <div class="custom-page-box-div">
            <div class="row">
                @if (Model.ExistingAddresses.Count > 0)
                {
                



                    <div class="col-lg-6 ">
                        
                        <div class="box-heading">
                            <h4>@T("Checkout.SelectBillingAddress")</h4>
                        </div>
<div class="custom-footer-cart-div">
    
                        @foreach (var item in Model.ExistingAddresses)
                        {


                            <div class="coupon-box offer offer-default">
                                <div class="title">
                                    <strong>@item.FirstName @item.LastName</strong>
                                </div>
    
                                <div class="hint">
                                    <div class="">@T("Address.Fields.Email"): @item.Email</div>

                                    @if (item.PhoneEnabled)
                                    {
                                        <div class="phone">
                                            @T("Address.Fields.PhoneNumber"):
                                            @item.PhoneNumber
                                        </div>
                                    }
                                    @if (item.FaxEnabled)
                                    {
                                        <div class="fax">
                                            @T("Address.Fields.FaxNumber"):
                                            @item.FaxNumber
                                        </div>
                                    }
                                    @if (item.CompanyEnabled && !String.IsNullOrEmpty(item.Company))
                                    {
                                        <div class="company">
                                            @item.Company
                                        </div>
                                    }
                                    @if (item.StreetAddressEnabled)
                                    {
                                        <div class="address1">
                                            @item.Address1
                                        </div>
                                    }
                                    @if (item.StreetAddress2Enabled && !String.IsNullOrEmpty(item.Address2))
                                    {
                                        <div class="address2">
                                            @item.Address2
                                        </div>
                                    }
                                    @if (item.CityEnabled || item.StateProvinceEnabled || item.ZipPostalCodeEnabled)
                                    {
                                        <div class="city-state-zip">
                                            @if (item.CityEnabled)
                                            {
                                                @item.City
                                            }
                                            @if (item.CityEnabled && (item.StateProvinceEnabled || item.ZipPostalCodeEnabled))
                                            {
                                                <text>,</text>
                                            }
                                            @if (item.StateProvinceEnabled)
                                            {
                                                @item.StateProvinceName
                                            }
                                            @if (item.ZipPostalCodeEnabled)
                                            {
                                                @item.ZipPostalCode
                                            }
                                        </div>
                                    }
                                    @if (item.CountryEnabled && !String.IsNullOrEmpty(item.CountryName))
                                    {
                                        <div class="country">
                                            @item.CountryName
                                        </div>
                                    }
                                </div>
                                <div class="coupon-code">
                                    <input type="button" value="@T("Checkout.BillToThisAddress")" class="btn btn-primary "  onclick=" setLocation('@Url.RouteUrl("CheckoutSelectBillingAddress", new { addressId = item.Id })') " />
                                </div>
                            </div>

                                             
                        }
                    </div>
                    </div>
  
                }
                @if (Model.ExistingAddresses.Count > 0)
                {
                    @:<div class="col-lg-6 box-block">
                }else{
                    @:<div class="col-lg-12 box-block">
                }
        
                <div class="box-heading">
                    <h4>@if (Model.ExistingAddresses.Count > 0)
                        {
                            @T("Checkout.OrEnterNewAddress")
                        }
                        else
                        {
                            @T("Checkout.EnterBillingAddress")
                        }</h4>
                </div>
                <div class="custom-footer-cart-div">
                
            
                    <div class="box-content">
                        <div class="feature-box">
                            @using (Html.BeginRouteForm("CheckoutBillingAddress", FormMethod.Post))
                            {
                                <div class="enter-address-body">
                                    @{
                                        var dataDictAddress = new ViewDataDictionary();
                                        //Merge ModelState (required for validation)
                                        dataDictAddress.ModelState.Merge(ViewData.ModelState);
                                        dataDictAddress.TemplateInfo.HtmlFieldPrefix = "NewAddress";
                                        @Html.Partial("_CreateOrUpdateAddress", Model.NewAddress, dataDictAddress)              
                                    }
                                </div>
                                <div class="text-right" >
                                    <input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="btn btn-primary" />
                                </div>
                            }
                        </div>
                    </div>
                </div>


        
                @if (Model.ExistingAddresses.Count > 0)
                {
                    @:</div>
                }else{
                    @:</div>
                }
            </div>
<div class="space15px"></div>
            

        </div>
    </div>

        
        
</div>

<div class="container">
    <h2 class="title text-center">@T("Checkout.OrderSummary")</h2>
    
    @Html.Action("OrderSummary", "ShoppingCart")
                
</div>

